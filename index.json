[{"content":"本人仅为兴趣使然记录过程，请尊重手册上的学术诚信条目。\n单步执行 根据文档中提到的字符串处理函数即可，此处使用strtok(), sscanf() 进行处理\nstatic int cmd_si(char *args) { /*extract the first argument*/ char *arg = strtok(NULL, \u0026#34; \u0026#34;); /*the default is 1*/ if (arg == NULL) { cpu_exec(1); } else { int steps; /*convert to int*/ sscanf(arg, \u0026#34;%d\u0026#34;, \u0026amp;steps); cpu_exec(steps); } return 0; } strtok()的第一个参数为所处理的字符串str，第二个参数为处理的界限delimiting byte\n在sdb_mainloop()函数中，进行了第一次调用，指明了处理的字符串str\nchar *cmd = strtok(str, \u0026#34; \u0026#34;); 在后续的调用中，因为所处理的都是同一个字符串，第一个参数str则必须为NULL\nsscanf()则将char *类型的参数转换为int，便于函数cpu_exec()执行\n打印寄存器 仿照gdb格式同时打印十六进制和十进制的地址值，按照手册提示调用isa_reg_display()即可\nstatic int cmd_info(char *args) { char *arg = strtok(NULL, \u0026#34; \u0026#34;); if (arg == NULL) { printf(\u0026#34;No args.\\n\u0026#34;); } else if (strcmp(arg, \u0026#34;r\u0026#34;) == 0) { isa_reg_display(); } return 0; } 其中isa_reg_display()实现为\nvoid isa_reg_display() { int length = sizeof(regs) / sizeof(regs[0]); for (int i = 0; i \u0026lt; length; i++) { printf(\u0026#34;%s 0x%x %d\\n\u0026#34;, regs[i], cpu.gpr[i], cpu.gpr[i]); } } 变量cpu的类型为CPU_state，在 /nemu/include/memory/isa.h可找到\n扫描内存 在手册中RTFSC篇章已经提到，访问内存的实现在nemu/src/memory中\n同上，调用一下已有的实现即可\nstatic int cmd_x(char *args) { /*extract the first and second argument*/ char *arg = strtok(NULL, \u0026#34; \u0026#34;); char *EXPR = strtok(NULL, \u0026#34; \u0026#34;); int i; if (arg == NULL || EXPR == NULL) { printf(\u0026#34;No args.\\n\u0026#34;); } else { int n; paddr_t expr; /*convert instructions*/ sscanf(arg, \u0026#34;%d\u0026#34;, \u0026amp;n); sscanf(EXPR, \u0026#34;%x\u0026#34;, \u0026amp;expr); for (i = 0; i \u0026lt; n; i++) { printf(\u0026#34;%#x: %#x\\n\u0026#34;, expr, paddr_read(expr, 4)); expr += 4; } } return 0; } 题目要求以十六进制形式输出连续的N个4字节，所以paddr_read()参数填4即可\n最后别忘记由于sdb是通过结构体数组cmd_table调用相应指令handler实现的，所以记得补全cmd_table并给出相应指令的help描述\nPA 1-1结束\n","permalink":"https://Yang2KF.github.io/posts/ics_pa_1-1/","summary":"\u003cp\u003e本人仅为兴趣使然记录过程，请尊重手册上的学术诚信条目。\u003c/p\u003e\n\u003ch3 id=\"单步执行\"\u003e单步执行\u003c/h3\u003e\n\u003cp\u003e根据文档中提到的字符串处理函数即可，此处使用\u003ccode\u003estrtok()\u003c/code\u003e, \u003ccode\u003esscanf()\u003c/code\u003e 进行处理\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#88c0d0\"\u003ecmd_si\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#81a1c1\"\u003echar\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e*\u003c/span\u003eargs\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#616e87;font-style:italic\"\u003e/*extract the first argument*/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1\"\u003echar\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e*\u003c/span\u003earg \u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#88c0d0\"\u003estrtok\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#81a1c1\"\u003eNULL\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#a3be8c\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#616e87;font-style:italic\"\u003e/*the default is 1*/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003earg \u003cspan style=\"color:#81a1c1\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003eNULL\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#88c0d0\"\u003ecpu_exec\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#b48ead\"\u003e1\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#81a1c1\"\u003eint\u003c/span\u003e steps\u003cspan style=\"color:#eceff4\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#616e87;font-style:italic\"\u003e/*convert to int*/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#88c0d0\"\u003esscanf\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003earg\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#a3be8c\"\u003e\u0026#34;%d\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e\u0026amp;\u003c/span\u003esteps\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#88c0d0\"\u003ecpu_exec\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003esteps\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#b48ead\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003estrtok()\u003c/code\u003e的第一个参数为所处理的字符串\u003ccode\u003estr\u003c/code\u003e，第二个参数为处理的界限\u003ccode\u003edelimiting byte\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e在\u003ccode\u003esdb_mainloop()\u003c/code\u003e函数中，进行了第一次调用，指明了处理的字符串\u003ccode\u003estr\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#81a1c1\"\u003echar\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e*\u003c/span\u003ecmd \u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#88c0d0\"\u003estrtok\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003estr\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#a3be8c\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在后续的调用中，因为所处理的都是同一个字符串，第一个参数\u003ccode\u003estr\u003c/code\u003e则必须为\u003cstrong\u003eNULL\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esscanf()\u003c/code\u003e则将\u003ccode\u003echar *\u003c/code\u003e类型的参数转换为\u003ccode\u003eint\u003c/code\u003e，便于函数\u003ccode\u003ecpu_exec()\u003c/code\u003e执行\u003c/p\u003e\n\u003ch3 id=\"打印寄存器\"\u003e打印寄存器\u003c/h3\u003e\n\u003cp\u003e仿照gdb格式同时打印十六进制和十进制的地址值，按照手册提示调用\u003ccode\u003eisa_reg_display()\u003c/code\u003e即可\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#88c0d0\"\u003ecmd_info\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#81a1c1\"\u003echar\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e*\u003c/span\u003eargs\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1\"\u003echar\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e*\u003c/span\u003earg \u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#88c0d0\"\u003estrtok\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#81a1c1\"\u003eNULL\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#a3be8c\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003earg \u003cspan style=\"color:#81a1c1\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003eNULL\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#88c0d0\"\u003eprintf\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#a3be8c\"\u003e\u0026#34;No args.\u003c/span\u003e\u003cspan style=\"color:#ebcb8b\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#a3be8c\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#88c0d0\"\u003estrcmp\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003earg\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#a3be8c\"\u003e\u0026#34;r\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#b48ead\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#88c0d0\"\u003eisa_reg_display\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#b48ead\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中\u003ccode\u003eisa_reg_display()\u003c/code\u003e实现为\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#81a1c1\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#88c0d0\"\u003eisa_reg_display\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1\"\u003eint\u003c/span\u003e length \u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003esizeof\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003eregs\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#81a1c1\"\u003e/\u003c/span\u003e \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003esizeof\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003eregs\u003cspan style=\"color:#eceff4\"\u003e[\u003c/span\u003e\u003cspan style=\"color:#b48ead\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#81a1c1;font-weight:bold\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#81a1c1\"\u003eint\u003c/span\u003e i \u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#b48ead\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e;\u003c/span\u003e i \u003cspan style=\"color:#81a1c1\"\u003e\u0026lt;\u003c/span\u003e length\u003cspan style=\"color:#eceff4\"\u003e;\u003c/span\u003e i\u003cspan style=\"color:#81a1c1\"\u003e++\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#eceff4\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#88c0d0\"\u003eprintf\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#a3be8c\"\u003e\u0026#34;%s     0x%x     %d\u003c/span\u003e\u003cspan style=\"color:#ebcb8b\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#a3be8c\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e,\u003c/span\u003e regs\u003cspan style=\"color:#eceff4\"\u003e[\u003c/span\u003ei\u003cspan style=\"color:#eceff4\"\u003e],\u003c/span\u003e cpu\u003cspan style=\"color:#eceff4\"\u003e.\u003c/span\u003egpr\u003cspan style=\"color:#eceff4\"\u003e[\u003c/span\u003ei\u003cspan style=\"color:#eceff4\"\u003e],\u003c/span\u003e cpu\u003cspan style=\"color:#eceff4\"\u003e.\u003c/span\u003egpr\u003cspan style=\"color:#eceff4\"\u003e[\u003c/span\u003ei\u003cspan style=\"color:#eceff4\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#eceff4\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e变量\u003ccode\u003ecpu\u003c/code\u003e的类型为\u003ccode\u003eCPU_state\u003c/code\u003e，在 \u003ccode\u003e/nemu/include/memory/isa.h\u003c/code\u003e可找到\u003c/p\u003e","title":"ICS PA 1-1 基础设施"},{"content":"本文默认已有一定的git与命令行基础\n配置环境: Ubuntu 22.04.5 LTS\n安装Hugo 使用Snap包管理器（安装方法有多种，可自行选择，此处选择较为简便的方式）\nsudo snap install hugo 查看hugo版本\nhugo version 如果显示找不到该命令，则在~/.bashrc设置一下环境变量即可\nexport PATH=$PATH:/snap/bin 创建站点 hugo new site Start 执行命令之后，进入你所创建的站点目录（下文统称此目录为根目录），会看见像这样的文件结构\n├── archetypes │ └── default.md #生成博文的模板 ├── assets #存放 css、js 文件 ├── content #存放markdown博文 ├── data #存放 Hugo 处理的数据 ├── hugo.toml #Hugo 配置文件 ├── layouts #存放html文件 ├── static #静态资源文件 └── themes #存放不同主题 比较主要的文件有\nassets: 可自定义css，js layouts: 可自定义html生成模板 选择合适的主题 为避免本地仓库与远程仓库分支名称不一致的冲突，建议将git主分支名称设置为main，与GitHub默认主分支名称保持一致\n首先将根目录初始化为本地git仓库\ngit init 访问官方主题网站：https://themes.gohugo.io/\n选择你所喜欢的主题，不同主题安装方式可能略有不同，请参照主题主页的文档，此处以PaperMod为例\n在根目录下执行该命令，即将该仓库作为本地仓库的子模块\ngit submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 然后在hugo.yml里添加主题即可（默认配置文件格式为toml，但yml更为直观）\ntheme: \u0026#39;PaperMod\u0026#39; 最后建议将此本地仓库push至github进行版本管理，即作为我们博客的源代码\n创建博文 顺利完成上述操作后，可以通过hugo new命令创建新的博文\nhugo new posts/Test.md 这个命令会在content目录下生成posts文件夹，并在posts文件夹下生成Test.md文件\n+++ date = \u0026#39;2024-10-30T19:25:01+08:00\u0026#39; draft = true title = \u0026#39;Test\u0026#39; +++ 该文件自动生成的内容为博文的front matter，可以通过修改archetypes中的default.md自行配置front matter\n该文件中的draft为草稿，只有设置为false时才会将博文正式发布\n发布博文 hugo server 使用此命令即可启动hugo服务，然后访问http://localhost:1313/即可看见所编写的博文\nhugo server -D 还可以通过此命令访问尚处于草稿状态的博文\n配置Github Pages 在github创建一个新仓库\n仓库名称必须为 用户名.github.io，仓库访问权限必须为public\n之后在你的根目录下执行该命令\nhugo 成功后会构建一个public目录，该目录即为根据hugo框架构建的静态网页文件，需要将此文件部署到github上\n进入该文件夹\ncd public 初始化为本地git仓库\ngit init 将你所创建的仓库添加为远程仓库\ngit remote add origin git@github.com:Yang2KF/Yang2KF.github.io.git 将内容添加到暂存区并提交\ngit add . git commit -m \u0026#34;first commit\u0026#34; 推送到远程仓库\ngit push -u origin main 此仓库即可作为存放所生成的静态网页的仓库，与博客源代码仓库区分开来\n最后再修改hugo.yml，将url替换成你的仓库名称即可对该链接进行访问\nbaseURL: \u0026#39;https://Yang2KF.github.io\u0026#39; ","permalink":"https://Yang2KF.github.io/posts/hugo-githubpages/","summary":"\u003cp\u003e本文默认已有一定的git与命令行基础\u003cbr\u003e\n配置环境: Ubuntu 22.04.5 LTS\u003c/p\u003e\n\u003ch3 id=\"安装hugo\"\u003e安装Hugo\u003c/h3\u003e\n\u003cp\u003e使用Snap包管理器（安装方法有多种，可自行选择，此处选择较为简便的方式）\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo snap install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e查看hugo版本\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg loading=\"lazy\" src=\"images/1.png\" alt=\"image-1\"  /\u003e\n\u003c/p\u003e\n\u003cp\u003e如果显示找不到该命令，则在\u003ccode\u003e~/.bashrc\u003c/code\u003e设置一下环境变量即可\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#81a1c1\"\u003eexport\u003c/span\u003e PATH\u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e$PATH:/snap/bin\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"创建站点\"\u003e创建站点\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site Start\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e执行命令之后，进入你所创建的站点目录（下文统称此目录为\u003cstrong\u003e根目录\u003c/strong\u003e），会看见像这样的文件结构\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── archetypes   \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e│   └── default.md      \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#生成博文的模板  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── assets              \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#存放 css、js 文件  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── content             \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#存放markdown博文  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── data                \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#存放 Hugo 处理的数据  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── hugo.toml           \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#Hugo 配置文件  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── layouts             \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#存放html文件  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e├── static              \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#静态资源文件  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e└── themes              \u003cspan style=\"color:#616e87;font-style:italic\"\u003e#存放不同主题  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e比较主要的文件有\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e assets: 可自定义css，js \u003c/li\u003e\n\u003cli\u003e layouts: 可自定义html生成模板 \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"选择合适的主题\"\u003e选择合适的主题\u003c/h3\u003e\n\u003cp\u003e为避免本地仓库与远程仓库分支名称不一致的冲突，建议将git主分支名称设置为\u003ccode\u003emain\u003c/code\u003e，与GitHub默认主分支名称保持一致\u003c/p\u003e\n\u003cp\u003e首先将根目录初始化为本地git仓库\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e访问官方主题网站：\u003ca href=\"https://themes.gohugo.io/\"\u003ehttps://themes.gohugo.io/\u003c/a\u003e\u003cbr\u003e\n选择你所喜欢的主题，不同主题安装方式可能略有不同，请参照主题主页的文档，此处以\u003cstrong\u003ePaperMod\u003c/strong\u003e为例\u003c/p\u003e\n\u003cp\u003e在根目录下执行该命令，即将该仓库作为本地仓库的子模块\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit submodule add --depth\u003cspan style=\"color:#81a1c1\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#b48ead\"\u003e1\u003c/span\u003e https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后在\u003ccode\u003ehugo.yml\u003c/code\u003e里添加主题即可（默认配置文件格式为toml，但yml更为直观）\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#81a1c1\"\u003etheme\u003c/span\u003e\u003cspan style=\"color:#eceff4\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#a3be8c\"\u003e\u0026#39;PaperMod\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最后建议将此本地仓库push至github进行版本管理，即作为我们博客的源代码\u003c/p\u003e","title":"Hugo + Github pages 搭建博客"}]